"""
In day four of Space Week, you are given a matrix of numbers (an array of arrays), representing potential landing spots for your rover.
Find the safest landing spot based on the following rules:

- Each spot in the matrix will contain a number from 0-9, inclusive.
- Any 0 represents a potential landing spot.
- Any number other than 0 is too dangerous to land. The higher the number, the more dangerous.
- The safest spot is defined as the 0 cell whose surrounding cells (up to 4 neighbors, ignore diagonals) have the lowest total danger.
- Ignore out-of-bounds neighbors (corners and edges just have fewer neighbors).
- Return the indices of the safest landing spot. There will always only be one safest spot.
"""

# CODE #
def find_landing_spot(matrix):
    
    def get_value_in_matrix(x, y):
        if x < len(matrix) and y < len(matrix) and x >= 0 and y >= 0: return matrix[x][y]
        else: return 0
    
    # Get all possible landing spots
    landing_spots = []
    i1 = 0
    for array in matrix:
        i2 = 0
        for location in array:
            if location == 0: landing_spots.append([i1,i2])
            i2+=1
        i1+=1
    
    # Collect danger values for each landing spot
    dangers = []
    for spot in landing_spots:
        danger = 0
        for adjust in [[0,1], [0,-1], [1,0], [-1,0]]:
            danger += int(get_value_in_matrix(spot[0]+adjust[0], spot[1]+adjust[1]))
        dangers.append(danger)

    # Combine the danger values with the locations they apply to
    for spot in landing_spots:
        landing_spots[landing_spots.index(spot)] = [spot, dangers[landing_spots.index(spot)]]
    
    # Decide which danger value is smallest
    least_dangerous = None
    for spot in landing_spots:
        if least_dangerous == None: least_dangerous = spot
        elif least_dangerous[1] > spot[1]: least_dangerous = spot
    
    return least_dangerous[0] # Return the placement of the least dangerous position for landing
