"""
The Tribonacci sequence is a series of numbers where each number is the sum of the three preceding ones.
When starting with 0, 0 and 1, the first 10 numbers in the sequence are 0, 0, 1, 1, 2, 4, 7, 13, 24, 44.

Given an array containing the first three numbers of a Tribonacci sequence, and an integer
 representing the length of the sequence, return an array containing the sequence of the given length.

- Your function should handle sequences of any length greater than or equal to zero.
- If the length is zero, return an empty array.
- Note that the starting numbers are part of the sequence.
"""

# CODE #
def tribonacci_sequence(start_sequence, length):
    if length < len(start_sequence): # If the length argument is less than the length of the given sequence
        if length == 0: return [] # If the length argument is 0, go ahead and return an empty list
        else: return start_sequence[:length] # Otherwise, return the given sequence requested in the length argument
    while len(start_sequence) < length: start_sequence.append(sum(start_sequence[-3:])) # While the local variable holding the given sequence is less than the requested length, append the calculated value to continue the tribonacci sequence
    return start_sequence
