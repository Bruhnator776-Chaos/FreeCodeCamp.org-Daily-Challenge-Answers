"""
Given a string, return a URL-friendly version of the string using the following constraints:
- All letters should be lowercase.
- All characters that are not letters, numbers, or spaces should be removed.
- All spaces should be replaced with the URL-encoded space code %20.
- Consecutive spaces should be replaced with a single %20.
- The returned string should not have leading or trailing %20.
"""

# CODE #
def generate_slug(string):
    from string import capwords # Import capowords function from string module that takes care of extra spaces efficiently
    string = capwords(string).lower() # Remove excess spaces and lowercase the string

    for character in string: # For each character in the string...
        if character.isalnum() or character == " ": pass # If the character is alphabetical, numerical, or a space, pass
        else: string = string[:string.index(character)] + string[string.index(character)+1:] # If the above line did not pass, remove the character from the string

    for character in string: # For each character in the string...
        if character == " ": string = string[:string.index(" ")]+"%20"+string[string.index(" ")+1:] # If the character is a space, replace it with "%20"

    return string # Return the final string
